
&НаКлиенте
Процедура ПолучемыеДанныеПриАктивизацииСтроки(Элемент)
	ТД = Элементы.ПолучемыеДанные.ТекущиеДанные;
	Если ТД<>Неопределено Тогда
	
		ТекущееСообщение = ТД.Сообщение;	
	
	КонецЕсли;
	 
КонецПроцедуры

&НаСервере
Процедура ОтправитьНаСервере()
	
	КлючеваяОперация = ОценкаПроизводительности.СоздатьКлючевуюОперацию("ОтправкаКафка");
	ВремяНачала = ОценкаПроизводительности.НачатьЗамерВремени();
		
	ТекстСообщения = СформироватьТекстСообщения();
	
	СоединениеКафка = Кафка.НовоеОписаниеСоединения("89.248.203.71:8082", "json");
	Отправитель = Кафка.НовыйОтправитель(СоединениеКафка);
	Кафка.ДобавитьСообщение(Отправитель, ТекстСообщения, Топик, Строка(новый УникальныйИдентификатор()));	   	
	Кафка.ОтправитьСообщения(Отправитель);

	Сообщить(Отправитель.ОписаниеСоединения.РезультатСоединения.ИнформацияОбОперации);
	
	ОценкаПроизводительности.ЗакончитьЗамерВремени(КлючеваяОперация,ВремяНачала);
КонецПроцедуры 

&НаСервере
Функция СформироватьТекстСообщения()
    СтрокаВозврат = "";
	СтрОтправки = новый Структура;
	
	СтрОтправки.Вставить("ФИО", ФИО);
	СтрОтправки.Вставить("Телефон", Телефон);
	СтрОтправки.Вставить("Почта", Почта);
	СтрОтправки.Вставить("Дом", Дом);
	СтрОтправки.Вставить("НомерКвартиры", НомерКвартиры);
	СтрОтправки.Вставить("Описание", Описание);
	
	//МасОтправки = новый Массив;
	//МасОтправки.Добавить(СтрОтправки);
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, СтрОтправки);
	СтрокаВозврат = ЗаписьJSON.Закрыть();
	
	Возврат СтрокаВозврат; 

КонецФункции 

&НаКлиенте
Процедура Отправить(Команда)
	ОтправитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПолучитьНаСервере()
	
	ПолучемыеДанные.Очистить();
	
	КлючеваяОперация = ОценкаПроизводительности.СоздатьКлючевуюОперацию("ПриемКафка");
	ВремяНачала = ОценкаПроизводительности.НачатьЗамерВремени();
	
	СоединениеКафка = Кафка.НовоеОписаниеСоединения("89.248.203.71:8082", "json");
	Подписчик = Кафка.НовыйПодписчик(СоединениеКафка, "ConsumerGroup1C", ,Истина, 500);
		
	Кафка.ЗарегистрироватьПодписчика(Подписчик);	
	Кафка.Подписаться(Подписчик, Топик);	
	Сообщения = Кафка.ПолучитьСообщения(Подписчик);
	Для каждого Сообщение из Сообщения Цикл 
		ТелоСообщения = Сообщение.Получить("value");
		Строка = ПолучемыеДанные.Добавить();
		Строка.Сообщение = ТелоСообщения;
		Если ЗначениеЗаполнено(ТелоСообщения) Тогда
		
			Строка.Процесс = СоздатьБизнесПроцесс(ТелоСообщения);	
		
		КонецЕсли;
		
	КонецЦикла;
		
	Кафка.УдалитьПодисчика(Подписчик);
	
	ОценкаПроизводительности.ЗакончитьЗамерВремени(КлючеваяОперация,ВремяНачала);
КонецПроцедуры

&НаСервере
Функция СоздатьБизнесПроцесс(ТелоСообщения)
    СтруктураОтвета = фПрочитатьJSON(ТелоСообщения);
	БП = БизнесПроцессы.ОзнакомлениеСОбращениемГО.СоздатьБизнесПроцесс();
	БП.Дата = ТекущаяДата();
	БП.ФИО = СтруктураОтвета.ФИО;
	БП.Телефон = СтруктураОтвета.Телефон;
	БП.Почта = СтруктураОтвета.Почта;
	БП.Дом = СтруктураОтвета.Дом;
	БП.НомерКвартиры = СтруктураОтвета.НомерКвартиры;
	БП.Описание = СтруктураОтвета.Описание;
	БП.Записать();
	БП.Старт();
    Возврат БП.Ссылка; 
КонецФункции  

Функция фПрочитатьJSON(ТекстJSON) Экспорт
	Чтение = Новый ЧтениеJSON;
	Чтение.УстановитьСтроку(ТекстJSON);
	Структура = ЗаполнитьСтруктуруИзОтветаJSON(Чтение);	
	Чтение.Закрыть();
	Возврат Структура;
КонецФункции

Функция ЗаполнитьСтруктуруИзОтветаJSON(Знач Чтение) Экспорт
	Результат = Новый Структура;

	ПоследнееИмяРеквизита = Неопределено;
	
	Пока Чтение.Прочитать() Цикл
		Тип = Чтение.ТипТекущегоЗначения;
		Если Тип = ТипЗначенияJSON.НачалоОбъекта И ПоследнееИмяРеквизита<>Неопределено Тогда 
			Результат[ПоследнееИмяРеквизита] = ЗаполнитьСтруктуруИзОтветаJSON(Чтение);
		ИначеЕсли Тип = ТипЗначенияJSON.КонецОбъекта Тогда 
			Возврат Результат;
			ПоследнееИмяРеквизита = Неопределено;
		ИначеЕсли Тип = ТипЗначенияJSON.ИмяСвойства Тогда 
			Результат.Вставить(Чтение.ТекущееЗначение, Неопределено);
			ПоследнееИмяРеквизита = Чтение.ТекущееЗначение;
		ИначеЕсли Тип = ТипЗначенияJSON.Булево или Тип = ТипЗначенияJSON.Строка
			или Тип = ТипЗначенияJSON.Число или Тип = ТипЗначенияJSON.Null Тогда 
			Результат[ПоследнееИмяРеквизита] = Чтение.ТекущееЗначение;
		ИначеЕсли Тип = ТипЗначенияJSON.НачалоМассива Тогда 
			Результат[ПоследнееИмяРеквизита] = ЗаполнитьМассивИзОтветаJSON(Чтение);
		КонецЕсли;
	КонецЦикла;  
		
	Возврат Результат;
КонецФункции 

Функция ЗаполнитьМассивИзОтветаJSON(Знач Чтение)
	Результат = Новый Массив;
	
	Пока Чтение.Прочитать() Цикл
		Тип = Чтение.ТипТекущегоЗначения;
		Если Тип = ТипЗначенияJSON.НачалоОбъекта Тогда 
			Результат.Добавить(ЗаполнитьСтруктуруИзОтветаJSON(Чтение));
		ИначеЕсли Тип = ТипЗначенияJSON.КонецМассива Тогда 
			Возврат Результат;
		КонецЕсли;
	КонецЦикла;  
	
	Возврат Результат;
КонецФункции


&НаКлиенте
Процедура Получить(Команда)
	ПолучитьНаСервере();
КонецПроцедуры
